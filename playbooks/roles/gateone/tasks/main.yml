---
- name: create gateone dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ gateone_uid }}"
    group: "{{ gateone_gid }}"
  with_items:
    - "{{ gateone_app_dir }}"
    - "{{ gateone_working_dir }}"

- name: checkout gateone repo into {{ gateone_code_dir }}
  git:
    dest: "{{ gateone_code_dir }}"
    repo: "{{ gateone_repo }}"
    version: "{{ gateone_version }}"
    accept_hostkey: yes
  become_user: "{{ gateone_uid }}"

- name: create gateone virtualenv
  command: "virtualenv {{ gateone_venv_dir }}"
  args:
    chdir: "{{ gateone_app_dir }}"
    creates: "{{ gateone_venv_dir }}/bin/pip"
  become_user: "{{ gateone_uid }}"

# Install gateone as root so setup.py will create the proper init scripts
- name: install gateone into virtualenv
  command: "{{ gateone_venv_dir }}/bin/python setup.py install"
  args:
    chdir: "{{ gateone_code_dir }}"

- name: gateone configuration directory
  file: >
    path=/etc/gateone/conf.d
    state=directory
    owner=root
    group=root

- name: gateone server configuration
  template: >
    src="gateone/conf.d/{{ item }}"
    dest="/etc/gateone/conf.d/{{ item }}"
    owner=root
    group=root
  with_items:
    - 10server.conf
    - 20authentication.conf
    - 50terminal.conf
  notify:
    - restart gateone

- name: create common directories
  file: >
    path="{{ item }}"
    state=directory
    owner="{{ gateone_uid }}"
    group="{{ gateone_gid }}"
    mode="0775"
  with_items:
    - "{{ gateone_user_dir }}/ANONYMOUS/.ssh"

- name: terminal user directory ownership
  shell: >
    chown -R {{ gateone_uid }}:{{ gateone_gid }} {{ gateone_user_dir }}

- name: terminal user directory permissions
  shell: >
    find {{ gateone_user_dir }} -type d -exec chmod 0775 {} \;

- name: nginx terminal include directory
  file: >
    path="{{ COMMON_APP_DIR }}/nginx/include/lms"
    state=directory
    owner=root
    group="{{ common_web_group }}"
    mode="0775"
  when: not devstack

- name: nginx terminal include
  copy: >
    src=edx/app/nginx/include/lms/terminal
    dest="{{ COMMON_APP_DIR }}/nginx/include/lms/terminal"
    owner=root
    group="{{ common_web_group }}"
  notify:
    - restart nginx
  when: not devstack
